{
  "name": "durusuna-backend",
  "version": "1.0.0",
  "description": "Backend API for Durusuna school communication app. Set DB_RESET_MODE=true to reset database on startup.",
  "_scripts_info": {
    "_comment": "Database Management Scripts - Use DB_RESET_MODE=true for Railway deployment, docker: commands for local development",
    "_railway": "Set DB_RESET_MODE=true environment variable to trigger clean reset on startup",
    "_docker": "Use docker:dev for development with auto-reset, or docker:setup for production-like setup",
    "_local": "Use db: commands for direct database operations when running locally"
  },
  "main": "src/server.ts",
  "scripts": {
    "start": "if [ \"$DB_RESET_MODE\" = \"true\" ]; then echo 'ðŸ”¥ DB_RESET_MODE detected - Running database reset...'; bun run db:clean-reset; echo 'âœ… Database reset completed - Starting server...'; fi && bun src/server.ts",
    "dev": "bun --watch src/server.ts",
    "test": "bun test",
    "test:watch": "bun test --watch",
    "test:coverage": "bun test --coverage",
    "test:ci": "bun test --ci --coverage",
    "lint": "eslint src/",
    "db:migrate": "bun scripts/migrate.ts migrate",
    "db:seed": "bun scripts/migrate.ts seed",
    "db:rollback": "bun scripts/migrate.ts rollback",
    "db:reset": "bun scripts/migrate.ts reset",
    "db:clean-reset": "bun scripts/reset.ts",
    "db:setup": "bun scripts/setup.ts",
    "docker:reset": "docker compose exec backend bun run db:clean-reset",
    "docker:migrate": "docker compose exec backend bun run db:migrate",
    "docker:seed": "docker compose exec backend bun run db:seed",
    "docker:setup": "docker compose exec backend bun run db:setup",
    "docker:dev": "DB_RESET_MODE=true docker compose up",
    "test:sevalla": "bun scripts/test-sevalla-connection.ts",
    "debug:railway": "bun scripts/debug-railway-sevalla.ts"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.450.0",
    "@aws-sdk/s3-request-presigner": "^3.450.0",
    "@railway/cli": "^4.5.5",
    "@types/swagger-jsdoc": "^6.0.4",
    "@types/swagger-ui-express": "^4.1.8",
    "bcryptjs": "^2.4.3",
    "cloudinary": "^1.40.0",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "express-rate-limit": "^6.10.0",
    "express-validator": "^7.0.1",
    "firebase-admin": "^13.4.0",
    "helmet": "^7.0.0",
    "joi": "^17.9.2",
    "jsonwebtoken": "^9.0.2",
    "knex": "^2.5.1",
    "mime-types": "^2.1.35",
    "moment": "^2.29.4",
    "morgan": "^1.10.0",
    "multer": "^1.4.5-lts.1",
    "multer-s3": "^3.0.1",
    "nodemailer": "^6.9.4",
    "pg": "^8.11.1",
    "sharp": "^0.32.4",
    "socket.io": "^4.7.2",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "uuid": "^9.0.0",
    "winston": "^3.10.0",
    "zod": "^4.0.10"
  },
  "devDependencies": {
    "@types/bcryptjs": "^3.0.0",
    "@types/compression": "^1.8.1",
    "@types/express": "^5.0.3",
    "@types/helmet": "^4.0.0",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/mime-types": "^3.0.1",
    "@types/morgan": "^1.9.10",
    "@types/multer": "^2.0.0",
    "@types/node": "^24.1.0",
    "eslint": "^8.46.0",
    "jest": "^29.6.2",
    "supertest": "^6.3.3",
    "typescript": "^5.8.3"
  },
  "engines": {
    "bun": ">=1.0.0"
  },
  "keywords": [
    "school",
    "education",
    "chat",
    "communication",
    "api",
    "nodejs",
    "express",
    "socketio"
  ],
  "author": "Durusuna Team",
  "license": "MIT"
}
